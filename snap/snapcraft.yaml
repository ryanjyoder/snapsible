name: snapsible
base: core18
version: '0.1'
summary: An Ansible Pull like experience as a snap
description: |
  Snapsible allows you to configure your device using Ansible and playbooks stored in a git repository. 

assumes: ["command-chain"]
grade: devel 
confinement: strict 

layout:
  /root:
    bind: $SNAP_DATA


apps:
  snapsible: 
    command: snapsible.sh
    daemon: simple
    #environment:
    #  ANSIBLE_CONFIG: $SNAP_DATA/ansible.cfg
    #  DEFAULT_LOCAL_TMP: $SNAP_DATA/tmp
    plugs: [network, network-bind]
    command-chain: 
      - 'bin/get_envs.sh'
    environment:
      GIT_EXEC_PATH: $SNAP/usr/lib/git-core

  setup:
    command: setup.sh
    command-chain: 
      - 'bin/get_envs.sh'
    plugs: [network]
    environment:
      GIT_EXEC_PATH: $SNAP/usr/lib/git-core

parts:
  scripts:
    plugin: dump
    source: scripts/
    stage-packages: [ssh-client, git-core, cpio ]
    organize:
      '*.sh' : bin/

  logname:
    plugin: nil
    stage-packages: [coreutils]
    stage:
      - 'usr/bin/logname'

  ansible:
    plugin: python
    source: https://github.com/ansible/ansible.git
    source-branch: devel
    stage-packages: [git, ssh-client]
    build-packages: [build-essential, libssl-dev, python-dev, libffi-dev]

  snapcraft-preload:
    source: https://github.com/sergiusens/snapcraft-preload.git
    plugin: cmake
    stage-packages:
      - try:
        - lib32gcc1
        - lib32stdc++6
        - libc6-i386
    build-packages:
      - gcc-multilib
      - g++-multilib


  mosquitto:
    after:
      - lws
    plugin: make
    make-parameters: ["prefix=/usr", "WITH_WEBSOCKETS=yes", "WITH_ADNS=yes", "CFLAGS=-Wall -ggdb -O2 -I$SNAPCRAFT_STAGE -D_GNU_SOURCE"]
    source: https://github.com/eclipse/mosquitto
    source-type: git

    build-packages:
      - libssl-dev
      - xsltproc
      - docbook-xsl
      - gcc
      - g++
    stage-packages:
      - libssl1.0.0
      - ca-certificates
    prime:
      - usr/sbin/mosquitto
      - usr/bin/mosquitto_pub
      - usr/bin/mosquitto_rr
      - usr/bin/mosquitto_sub
      - usr/bin/mosquitto_passwd
      - usr/lib/libmosquitto.so*
      - lib/*-linux-gnu/libcrypto.so*
      - lib/*-linux-gnu/libssl.so*
      - usr/include/mosquitto.h
      - usr/include/mosquitto_broker.h
      - usr/include/mosquitto_plugin.h

  lws:
    plugin: cmake
    configflags: ["-DLWS_IPV6=ON", "-DLWS_WITHOUT_CLIENT=ON", "-DLWS_WITHOUT_EXTENSIONS=ON", "-DLWS_WITH_ZIP_FOPS=OFF", "-DLWS_WITH_ZLIB=OFF", "-DLWS_WITH_SHARED=OFF"]
    source: https://github.com/warmcat/libwebsockets/archive/v2.4.2.tar.gz
    source-type: tar
    stage:
      - include/libwebsockets.h
      - include/lws_config.h
      - lib/libwebsockets.a
    prime: [-*]

